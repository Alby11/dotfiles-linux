# Aliases

if [ $(echo $0) = "/bin/zsh" ]
then
  alias aliasG='alias -g '
else
  alias aliasG='alias '
fi

aliasG sudo='sudo '

alias SC="source $ZDOTDIR/.zshrc"

aliasG EE='exit '
aliasG grep='grep --color=auto '
aliasG fgrep='fgrep --color=auto '
aliasG egrep='egrep --color=auto '
aliasG G='| grep -i '
aliasG L='| less +f '
aliasG dush='sudo du -sh '
aliasG h="history -10 " # last 10 history commands
aliasG hr="history | grep " # +command
aliasG nta='sudo netstat -poeta '
aliasG ola='/bin/ls -lahi --color=auto '
aliasG ols='/bin/ls --color=auto '
aliasG psa='sudo ps -aux '
alias C="clear "
alias dfh='df -h '
alias freeh='free -mh '

if command -v ss &> /dev/null
then
  aliasG ssa='sudo ss -poeta '
fi

if command -v notify-send &> /dev/null
  then
  # Credits to: https://gist.github.com/Feniksovich
  # Add an "alert" alias for long running commands.  Use like so:
  #   sleep 10; alert
  alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'
fi

if command -v systemctl &> /dev/null
then
  #Basic systemctl commands
  aliasG systemctl="sudo systemctl "
  alias ctl="systemctl "
  # Credits to: https://gist.github.com/Feniksovich
  alias ctlsp="systemctl stop "
  alias ctlst="systemctl start "
  alias ctlrt="systemctl restart "
  alias ctls="systemctl status "

  # Enable/Disable commands for units
  alias ctle='systemctl enable '
  alias ctld='systemctl disable '

  # Start and then view status of service
  ctlsts ()
  {
    systemctl start "$1"
    systemctl status "$1"
  }

  # Restart and then view status of service
  ctlrts ()
  {
    systemctl restart "$1"
    systemctl status "$1"
  }

  # Masking Units to disabling them
  alias ctlmask='systemctl mask '
  alias ctlunmask='systemctl unmask '

  # List failed units and reset systemd system status
  alias ctlfailed='systemctl --failed --all '
  alias ctlrf='systemctl reset-failed '

  alias ctldrd="systemctl daemon-reload "
fi

if command -v iptables &> /dev/null
then
  # Lookup iptables chain
  alias lookup="iptables --line-numbers -nvL "
fi

if command -v apt &> /dev/null
then
  alias j="journalctl "
  alias jf="j --follow "
  alias ju="j -xeu "
  alias juf="j -feu "
fi

if command -v apt &> /dev/null
then
    aliasG apt='sudo apt '
    aliasG apts='sudo apt search '
    aliasG aptu='sudo apt update '
    aliasG aptup='sudo apt upgrade -y '
    aliasG aptdup='sudo apt dist-upgrade -y '
    aliasG apti='sudo apt install -y '
    aliasG aptr='sudo apt remove '
    aliasG aptar='sudo apt autoremove '
    aliasG aptap='sudo apt autopurge '
fi

if command -v tmux &> /dev/null
then
    aliasG T='tmux '
    aliasG tls='tmux ls '
    aliasG ta='tmux attach -t '
    aliasG tn='tmux new -s '
    aliasG tr='tmux rename-session -t '
    aliasG tk='tmux kill-session -t '
fi

if command -v nvim &> /dev/null ; then
  alias e='nvim '
  alias nv='nvim '
  alias vi='nvim '
  alias vim='nvim '
  aliasG E='| nvim '
  if command -v nvr &> /dev/null ; then
    alias nvimr='nvim --listen /tmp/nvimsocket '
    alias nvrs='nvr -s '
    # alias nvrr='nvr --remote'
    # alias nvrs='nvr --remote-send'
    # alias nvre='nvr --remote-expr'
    # alias nvrc='nvr -c'
  fi
fi

if command -v xclip &> /dev/null
then
    aliasG Xp='xclip -o '
    aliasG Xy=' | xclip -i '
fi
if command -v clipboard &> /dev/null
then
  aliasG Cp="clipboard "
  aliasG Cy=' | clipboard '
fi
if command -v wl-copy &> /dev/null
then
  aliasG Wp="wl-paste "
  aliasG Wy=' | wl-copy '
fi

if command -v ranger &> /dev/null
then
    alias rw='ranger '
fi

if command -v fdfind &> /dev/null
then
    alias fd='fdfind '
fi

if command -v cargo &>/dev/null ; then
  if command -v z &> /dev/null ; then
    alias cd='z '
  fi
fi

if command -v exa &> /dev/null
then
  alias ls="exa --icons --git --group-directories-first "
  alias ll="exa -l -g --icons --git --group-directories-first "
  alias la="exa -l -a --icons --git --group-directories-first "
  alias lt="exa -L 1 --icons --tree --git-ignore --group-directories-first "
fi

if command -v git &> /dev/null
then
  alias g='git '
  function dotfiles {
     git --git-dir=$HOME/.dotfiles_git/ --work-tree=$HOME $@
  }    
  alias dot='dotfiles '
fi

if command -v kubectl &> /dev/null
then
    source <(kubectl completion zsh)
    alias k='kubectl '
fi

if command -v minikube &> /dev/null
then
    source <(minikube completion zsh)
    alias mk='minikube '
fi

if command -v docker &> /dev/null
then
    alias dk='docker '
fi

if command -v ansible &> /dev/null
then
    alias a='ansible '
fi

if command -v podman &> /dev/null
then
    alias pd='podman '
fi

if command -v curl &> /dev/null
then
  # Creditst to Jeremy "Jay" LaCroix
  # <https://www.learnlinux.tv/10-linux-terminal-tips-and-tricks-to-enhance-your-workflow/
  c() {
    # Ask cheat.sh website for details about a Linux command.
    curl -m 10 "http://cheat.sh/${1}" 2>/dev/null || printf '%s\n' "[ERROR] Something broke"
  }
  alias speedtest='curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python -'
  wth() {
    curl -m 10 "https://wttr.in/${1}" 2>/dev/null || printf '%s\n' "[ERROR] Something broke"
  }
  alias myip='curl http://ipecho.net/plain; echo '
  alias wimp='curl https://wttr.in/imperia'
fi

checkSum () {
  echo $1
  echo $2
  echo $3
  if [ $1 = "" ] || [ $2 = "" ] || [ $3 = "" ]
  then
    echo "Usage: checkmd5 [md5|sha1|sha256|sha512] [file] [sum]"
    return 2
  fi
  if ! [ $1 = "md5" ] || [ $1 = "sha1" ] || [ $1 = "sha256" ] || [ $1 = "sha512" ]
  then
    echo "algorithm (firt paramater) must be [md5|sha1|sha256|sha512]"
    return 3
  fi
  local command="${1}sum"
  if command -v $command &> /dev/null 
  then
    local sum=$($command $2 | cut -d ' ' -f 1)
    echo $command
    echo $sum
    if [ $sum = $3 ]
    then
      echo "${command} OK"
      return 0
    else
      echo "${command} NOT OK!!"
      return 1
    fi
  echo "Command ${command} is not installed."
  return 4
  fi
}

if [ $( command -v fzf ) ] && [ $( command -v rg ) ] && [ $( command -v bat ) ] ; then
  export FZF_BASE=/usr/bin/fzf
  export FZF_DEFAULT_COMMAND='rg --ignore-case --files --no-ignore-vcs --hidden '
  # catppucin theme
  # export FZF_DEFAULT_OPTS=' \
    # --preview bat --border=rounded  \
    # --color=bg+:#313244,bg:#1e1e2e,spinner:#f5e0dc,hl:#f38ba8 \
    # --color=fg:#cdd6f4,header:#f38ba8,info:#cba6f7,pointer:#f5e0dc \
    # --color=marker:#f5e0dc,fg+:#cdd6f4,prompt:#cba6f7,hl+:#f38ba8"'
  # aliasG fzfb="fzf \
    # --preview bat --border=rounded  \
    # --color=bg+:#313244,bg:#1e1e2e,spinner:#f5e0dc,hl:#f38ba8 \
    # --color=fg:#cdd6f4,header:#f38ba8,info:#cba6f7,pointer:#f5e0dc \
    # --color=marker:#f5e0dc,fg+:#cdd6f4,prompt:#cba6f7,hl+:#f38ba8 \
    # ; "
  # dracula theme
  export FZF_DEFAULT_OPTS="\
    --preview bat --border=rounded  \
    --color=fg:#f8f8f2,bg:#282a36,hl:#bd93f9 \
    --color=fg+:#f8f8f2,bg+:#44475a,hl+:#bd93f9 \
    --color=info:#ffb86c,prompt:#50fa7b,pointer:#ff79c6 \
    --color=marker:#ff79c6,spinner:#ffb86c,header:#6272a4 \
    ;"
  DISABLE_FZF_AUTO_COMPLETION="false"
  DISABLE_FZF_KEY_BINDINGS="true"
  aliasG fzfb="fzf \
    # --preview bat --color=always --style=numbers --line-range=:500 {} \
    --preview bat --border=rounded  \
    --color=fg:#f8f8f2,bg:#282a36,hl:#bd93f9 \
    --color=fg+:#f8f8f2,bg+:#44475a,hl+:#bd93f9 \
    --color=info:#ffb86c,prompt:#50fa7b,pointer:#ff79c6 \
    --color=marker:#ff79c6,spinner:#ffb86c,header:#6272a4 \
    ;"
  aliasG R='| rg '
else
  echo "fzf|rg|bat missing..."
fi
