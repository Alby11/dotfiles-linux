### SOURCING/EXPORTING UTILITIES
export function SOURCE_RCFILE()
{
  if [ -f $1 ]
  then
    source $1
    echo "$1 successfully sourced ... "
    return
  fi
  echo "$1 not sourced ... "
}
export function EXPORT_DIR()
{
  if [ -d $1 ] 
  then
    export PATH=$1:$PATH
    echo "$1 successfully exported ... "
    return
  fi
  echo "$1 not exported ... "
}

### GIT
git config --global user.name "alby11"
git config --global user.email 17138674+alby11@users.noreply.github.com
git config --global core.autocrlf false
git config --global core.fsmonitor true
git config --global credential.helper manager-core
git config --global core.editor nvim
git config --global core.editor.nvim.path "/usr/bin/nvim"
git config --global diff.tool nvim
git config --global diff.tool.nvim.path "/usr/bin/nvim"
git config --global diff.tool.nvim.cmd "nvim -d \"$local\" \"$remote\""
git config --global core.fsmonitor true

# set up environment, depending on os
if grep -qi microsoft /proc/version
then
  echo "ubuntu on wsl"
  [ ! -d ~/.wp ] && ln -s $(wslpath "$(wslvar userprofile)") ~/.wp
  export PROFILEFILES=$(wslpath "$(wslvar onedriveconsumer)/profilefiles")
  ln -sf $PROFILEFILES ~/
  export PROFILEFILES=~/profilefiles
  # tmux
  # win32yank_exe="/mnt/c/programdata/scoop/apps/neovim-nightly/current/bin/win32yank.exe"
  win32yank_exe=$(wslpath "$(wslvar programdata)")/scoop/shims/win32yank.exe
  if [ -e $win32yank_exe ] && [ ! -f /usr/local/bin/win32yank.exe ]
  then
    sudo ln -s $win32yank_exe "/usr/local/bin/win32yank.exe"
  fi
elif grep -qi ubuntu /proc/version ; then
  echo "native ubuntu linux"
  if [ -d ~/profilefiles ]
  then
    cd ~/profilefiles
    git pull
    cd ~
  else
    cd ~
    git clone git@github.com:alby11/profilefiles.git
  fi
  export PROFILEFILES=~/profilefiles
fi

# Make neovim the default editor.
export EDITOR='nvim';

# Enable persistent REPL history for `node`.
export NODE_REPL_HISTORY=~/.node_history;
# Allow 32³ entries; the default is 1000.
export NODE_REPL_HISTORY_SIZE='32768';
# Use sloppy mode by default, matching web browsers.
export NODE_REPL_MODE='sloppy';

# Make Python use UTF-8 encoding for output to stdin, stdout, and stderr.
export PYTHONIOENCODING='UTF-8';

# Omit duplicates and commands that begin with a space from history.
export HISTCONTROL='ignoreboth';

# Prefer US English and use UTF-8.
export LANG='en_US.UTF-8';
export LC_ALL='en_US.UTF-8';

# Highlight section titles in manual pages.
export LESS_TERMCAP_md="${yellow}";

# Don’t clear the screen after quitting a manual page.
export MANPAGER='less -X';

# Avoid issues with `gpg` as installed via Homebrew.
# https://stackoverflow.com/a/42265848/96656
#export GPG_TTY=$(tty);

# Hide the “default interactive shell is now zsh” warning on macOS.
#export BASH_SILENCE_DEPRECATION_WARNING=1;

### ANTIGEN
# SOURCE_RCFILE $ZSH_CONFIG_HOME/.zsh_antigenrc

### ANTIDOTE
SOURCE_RCFILE $ZSH_CONFIG_HOME/.zsh_antidoterc

### Initialize CARGO
EXPORT_DIR $HOME/.cargo/bin

### Initialize NVM
if [[ -d $HOME/.nvm ]]; then
  export NVM_DIR="$HOME/.nvm"
  [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
  [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
fi

### GITHUB repos exports
[ -d ~/gitdepot ] && gitdepot=~/gitdepot
# initialize bat-extras
EXPORT_DIR $gitdepot/bat-extras/bin
# initialize Go
EXPORT_DIR $gitdepot/goroot/bin

# Catppuccin TTY theme
SOURCE_RCFILE $ZSH_CONFIG_HOME/catppuccin_tty/mocha.sh

### Zoxide
if command -v zoxide &> /dev/null
then
  eval "$(zoxide init zsh)" 
fi

### Initialize Starship
[ -f $PROFILEFILES/starship/starship.toml ] && \
  export STARSHIP_CONFIG=$PROFILEFILES/starship/starship.toml && \
  eval "$(starship init zsh)"
