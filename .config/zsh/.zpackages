# vim: filetype=zsh

if [ -f ${HOME}/.bootstrapped ] || [ $SHLVL -gt 2 ]; then
  return 1
fi

# Function to check for NOPASSWD privileges
check_nopasswd() {
    local sudo_output=$(SUDO_ASKPASS=/bin/false sudo -ln 2>/dev/null)
    if [[ $sudo_output == *"(ALL) NOPASSWD: ALL"* ]] || [[ $sudo_output == *"NOPASSWD:"* ]]; then
        return 0
    else
        return 1
    fi
}

# If the user does not have NOPASSWD privileges, set SUDO_ASKPASS
if ! check_nopasswd; then
    export SUDO_ASKPASS=$(which ssh-askpass)
    sudo -v
fi

#PACKAGE MANAGER
[[ $(command -v dnf) ]] && has_dnf=1
[[ $(command -v apt) ]] && has_apt=1
[[ $(command -v pacman) ]] && has_pacman=1

# Define common packages (those with the same name on both Fedora and Ubuntu)
common_packages=(
    "bat"
    "btop"
    "curl"
    "fzf"
    "gnome-tweaks"
    "gnupg2"
    "htop"
    "keychain"
    "python3-pip"
    "ripgrep"
    "shellcheck"
    "shfmt"
    "wl-clipboard"
    "xclip"
    "zoxide"
)

# Define Fedora-specific packages and Ubuntu-specific packages
fedora_packages=(
    "ccze"
    "chafa"
    "clang"
    "fd-find"
    "libcurl-devel"
    "libnotify"
    "libwnck3"
    "lsb_release"
    "luarocks"
    "perl-Image-ExifTool"
    "xorg-x11-server-Xwayland"
    "xsel"
)

ubuntu_packages=(
    "clang-format"
    "exa"
    "gir1.2-wnck-3.0"
    "libimage-exiftool-perl"
    "libnotify-bin"
    "lsb-release"
    "xsel"
    "xwayland"
)

arch_packages=(
    "bat"
    "btop"
    "curl"
    "exa"
    "fzf"
    "gnome-tweaks"
    "gnupg"
    "htop"
    "keychain"
    "perl-image-exiftool"
    "python-pip"
    "ripgrep"
    "shellcheck"
    "shfmt"
    "wl-clipboard-x11"
    "xclip"
    "xsel"
    "zoxide"
)

# Install packages based on the available package manager
if [[ $has_dnf ]]; then
    sudo dnf install -y "${common_packages[@]}" "${fedora_packages[@]}"
elif [[ $has_apt ]]; then
    export DEBIAN_FRONTEND=noninteractive
    if ! find /var/lib/apt/periodic/update-success-stamp -mtime -1 &>/dev/null; then
        sudo apt-get update
    fi
    sudo apt-get install -y "${common_packages[@]}" "${ubuntu_packages[@]}"
    unset DEBIAN_FRONTEND
elif [[ $has_pacman ]]; then
    sudo pacman -Syu --noconfirm "${arch_packages[@]}"
fi

# Cargo
if ! command -v rustup &>/dev/null; then
  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --no-modify-path
fi
cargo install fnm gitui grc-rs lolcrab vivid

# NPM
if ! command -v npm &>/dev/null; then
  if command -v fnm &>/dev/null; then
    fnm install --lts
  fi
else
  npm_packages=(
    "@fsouza/prettierd"
    "eslint"
    "fixjson"
    "neovim"
    "solhint"
  )
  for package in "${npm_packages[@]}"; do
    if ! npm list -g "$package" >/dev/null 2>&1; then
      npm install -g "$package"
    fi
  done
fi

# PIP
python -m pip install --user \
  autoenv \
  black \
  flake8 \
  openai \
  pynvim \
  thefuck \
  virtualenv \
  virtualenvwrapper

# Git raw (if needed)
# Add any commands to install raw Git repositories or other software not available via package managers

# Mark the system as bootstrapped
date > "${HOME}/.bootstrapped"

# Clean up
unset has_apt has_dnf
