#!/usr/bin/env zsh
# vim: filetype=zsh

ECHOCAT ".zpackages - installing vital packages..."
local i_did_something=0
#PACKAGE MANAGER
# Determine the package manager and declare the appropriate function and packages
if CHECK_COMMANDS dnf > /dev/null && ! CHECK_COMMANDS apt > /dev/null; then
  # Function to check and install package for dnf
  local check_install() {
    if ! dnf list installed "$1" >/dev/null 2>&1; then
      echo $?
      ECHOCAT "$package (pm) is not installed globally. Installing..."
      i_did_something=1
      sudo dnf install -y "$1"
    fi
  }
  # Function to check and install package group for dnf
  local check_install_group() {
    if ! dnf group list hidden installed | grep -q "$1"; then
      ECHOCAT "Package group '$1' is not installed globally. Installing..."
      i_did_something=1
      sudo dnf groupinstall -y "$1"
    fi
  }
  local packages=(
    "ca-certificates"
    "clang"
    "curl"
    "fzf"
    "gnome-tweaks"
    "gnupg2"
    "golang"
    "keychain"
    "libnotify"
    "lsb_release"
    "luarocks"
    "nodejs"
    "nodejs-npm"
    "openssh-askpass"
    "openssl"
    "openssl-devel"
    "perl"
    "pkgconf-pkg-config"
    "polkit"
    "python-unversioned-command"
    "python3-pip"
    "shellcheck"
    "shfmt"
    "xclip"
    # "cargo"
    # "fd-find"
    # "ripgrep"
  )
  local package_groups=(
    "Development Tools"
  )
elif CHECK_COMMANDS apt > /dev/null && ! CHECK_COMMANDS dnf > /dev/null; then
  # Function to check and install package for apt
  local check_install() {
    if ! dpkg -s "$1" >/dev/null 2>&1; then
      ECHOCAT "$package (pm) is not installed globally. Installing..."
      i_did_something=1
      sudo apt update && sudo apt install -y "$1"
    fi
  }
  local packages=(
    "apt-file"
    "apt-utils"
    "build-essential"
    "ca-certificates"
    "clang-format"
    "curl"
    "fzf"
    "gnome-tweaks"
    "gnupg2"
    "golang-go"
    "gpg"
    "keychain"
    "libnotify-bin"
    "libssl-dev"
    "lsb-release"
    "luarocks"
    "nodejs"
    "npm"
    "openssl"
    "perl"
    "pkg-config"
    "policykit-1"
    "python-is-python3"
    "python3-pip"
    "shellcheck"
    "shfmt"
    "ssh-askpass"
    "xclip"
    # "cargo"
    # "fd-find"
    # "ripgrep"
  )
fi
# Install individual packages
if [[ -n $packages ]]; then
  for package in $packages; do
    sudo check_install "$package"
  done
fi
# Install package groups (if applicable)
if [[ -n $package_groups ]]; then
  for package_group in "${package_groups[@]}"; do
    sudo check_install_group "$package_group"
  done
fi
# CARGO
if ! CHECK_COMMANDS rustup; then
  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --no-modify-path
fi
packages=(
  "bat"
  "eza"
  "fd-find"
  "gitui"
  "lolcrab"
  "ripgrep"
  "vivid"
  "zellij"
  "zoxide"
)
for package in $packages; do
  if ! cargo install --list | grep -qE "^${package} v[0-9]+.[0-9]+.[0-9]+:" >/dev/null 2>&1; then
    ECHOCAT "$package (cargo) is not installed globally. Installing..."
    i_did_something=1
    cargo install $package
  fi
done
# NPM
packages=(
  "@fsouza/prettierd"
  "eslint"
  "fixjson"
  "neovim"
  "solhint"
)
for package in $packages; do
  if ! npm list -g "$package" >/dev/null 2>&1; then
    ECHOCAT "$package (npm) is not installed globally. Installing..."
    i_did_something=1
    sudo npm install -g "$package"
  fi
done
# PIP
packages=(
  "autoenv"
  "black"
  "flake8"
  "neovim"
  "pip-install"
  "thefuck"
  "virtualenv"
  "virtualenvwrapper"
)
for package in $packages; do
  if ! python -m pip show "$package" > /dev/null 2>&1; then
    ECHOCAT "$package (pip) is not installed globally. Installing..."
    i_did_something=1
    sudo python -m pip install "$package"
  fi
done
# Avoid re-run this script in subshells
if [ "$i_did_something" -eq 1 ]; then
  notify-send "${basename "$0"}: Something has been installed, re-launch the shell..."
fi
# Cleanup
unset package packages package_group package_groups i_did_something check_install check_install_group
