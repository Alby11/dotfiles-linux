#!/usr/bin/env bash

set -o pipefail
if [[ -n "$DEBUG" ]]; then
  set -x
fi

fail() {
  printf '%s\n' "$1" >&2
  exit "${2-1}"
}

has() {
  which "$@" > /dev/null 2>&1
}

fzf-rg-edit() {
  local case_sensitive="--case-sensitive"
  local fixed_strings=""
  while (( "$#" )); do
    case "$1" in
      -i)
        case_sensitive="--ignore-case"
        shift
        ;;
      -e)
        fixed_strings="-F"
        shift
        ;;
      *)
        break
        ;;
    esac
  done

  if has bat; then
    file_and_line=$(
      rg $case_sensitive $fixed_strings --hidden --color=always --line-number "$1" | fzf --ansi --no-multi --select-1 --exit-0 \
        --preview 'echo {} | cut -d: -f1,2 | xargs -r sh -c '\''bat --color=always --line-range :500 "$@"'\'' _'
      )
    if [[ -n "$file_and_line" ]]; then
      filename=$(echo "$file_and_line" | cut -d: -f1)
      line_number=$(echo "$file_and_line" | cut -d: -f2)
      $EDITOR +$line_number "$filename"
    fi
  else
    file_and_line=$(
      rg $case_sensitive $fixed_strings --hidden --color=always --line-number "$1" | fzf --ansi --no-multi --select-1 --exit-0 \
        --preview 'echo {} | cut -d: -f1,2 | xargs -r sh -c '\''head -100 "$@"'\'' _'
      )
    if [[ -n "$file_and_line" ]]; then
      filename=$(echo "$file_and_line" | cut -d: -f1)
      line_number=$(echo "$file_and_line" | cut -d: -f2)
      $EDITOR +$line_number "$filename"
    fi
  fi
}

fzf-rg-edit $@
