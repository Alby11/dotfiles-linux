# paste_rs.zsh

# Zsh function for interacting with paste.rs
paste_rs() {
    # The first argument is the command (upload, get, delete, or --help)
    local command=$1

    # The second argument is the ID of the paste (for get and delete commands)
    local id=$2

    # Ensure the history file exists
    local history_file="$ZDOTDIR/.paste_rs_history"
    touch $history_file

    case $command in
        upload)
            # Upload data to paste.rs and save the URL to the history file
            local data=${2:-$(cat)}
            local url=$(echo -n "$data" | curl -X POST --data-binary @- https://paste.rs)
            echo $url >> $history_file
            echo "Uploaded. URL: $url\nAdd to clipboard?"
            read clip
            if [ $clip =~ ^[yY]([eE][sS])?$ ]; then echo $url | wl-copy; fi
            ;;
        get)
            # Retrieve a paste by ID
            curl -X GET https://paste.rs/$id
            ;;
        delete)
            # Delete a paste by ID
            curl -X DELETE https://paste.rs/$id
            echo "Deleted paste $id"
            ;;
        --help)
            # Display help information
            echo "Usage: paste_rs <command> [<id>]"
            echo ""
            echo "Commands:"
            echo "  upload   Upload data to paste.rs. Use 'cat yourfile.txt | paste_rs upload' to upload a file."
            echo "  get      Retrieve a paste by ID. Use 'paste_rs get <id>' to retrieve a paste."
            echo "  delete   Delete a paste by ID. Use 'paste_rs delete <id>' to delete a paste."
            ;;
        *)
            echo "Invalid command. Use 'upload', 'get', 'delete', or '--help'."
            ;;
    esac
}

# Autocomplete function for paste_rs
_paste_rs() {
    local -a commands
    commands=(
        'upload:Upload data to paste.rs'
        'get:Retrieve a paste by ID'
        'delete:Delete a paste by ID'
    )

    if (( CURRENT == 2 )); then
        _describe -t commands 'paste.rs command' commands
        return
    fi

    case "$words[2]" in
        get|delete)
            if (( CURRENT == 3 )); then
                # Autocomplete with IDs from the history file
                local -a ids
                ids=("${(@f)$(cut -d'/' -f4 $ZDOTDIR/.paste_rs_history)}")
                _describe -t ids 'paste id' ids
            fi
            ;;
    esac
}

# Register _paste_rs as a completion for paste_rs
compdef _paste_rs paste_rs
