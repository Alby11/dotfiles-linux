### SETTINGS ###
# bind C-b to C-a
unbind C-b
set-option -g prefix C-a
# enable mouse
set-option -g mouse on
# Set tmux mode to vi (default is emac)
set-window-option -g mode-keys vi
# clipboard on
set -s set-clipboard on
set -as terminal-features ',screen-256color:clipboard'
### PLUGINS ###
# TPM
set -g @plugin 'tmux-plugins/tpm'
# sensible
set -g @plugin 'tmux-plugins/tmux-sensible'
# Resurrect + Continuum
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-capture-pane-contents 'on'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'
# vim-tmux-navigator
set -g @plugin 'christoomey/vim-tmux-navigator'
run '~/.tmux/plugins/tpm/tpm'
# Other plugins
set -g @plugin 'MunifTanjim/tmux-mode-indicator'
set -g @plugin 'edkolev/tmuxline.vim'
set -g @plugin 'jaclu/tmux-menus'
set -g @plugin 'noscript/tmux-mighty-scroll'
set -g @plugin 'schasse/tmux-jump'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @override_copy_command 'clipboard'
set -g @yank_selection 'clipboard' # or 'secondary' or 'primary'
set -g @plugin 'tmux-plugins/tmux-cowboy'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'tmux-plugins/tmux-urlview'

# Complete words from tmux pane(s) {{{1
# Source: http://blog.plenz.com/2012-01/zsh-complete-words-from-tmux-pane.html
# Gist: https://gist.github.com/blueyed/6856354
# _tmux_pane_words() {
#   local expl
#   local -a w
#   if [[ -z "$TMUX_PANE" ]]; then
#     _message "not running inside tmux!"
#     return 1
#   fi

  # Based on vim-tmuxcomplete's splitwords function.
  # https://github.com/wellle/tmux-complete.vim/blob/master/sh/tmuxcomplete
  # _tmux_capture_pane() {
  #   tmux capture-pane -J -p -S -100 $@ |
  #     # Remove "^C".
  #     sed 's/\^C\S*/ /g' |
  #     # copy lines and split words
  #     sed -e 'p;s/[^a-zA-Z0-9_]/ /g' |
  #     # split on spaces
  #     tr -s '[:space:]' '\n' |
  #     # remove surrounding non-word characters
  #     =grep -o "\w.*\w"
  # }
  # Capture current pane first.
#   w=( ${(u)=$(_tmux_capture_pane)} )
#   local i
#   for i in $(tmux list-panes -F '#D'); do
#     # Skip current pane (handled before).
#     [[ "$TMUX_PANE" = "$i" ]] && continue
#     w+=( ${(u)=$(_tmux_capture_pane -t $i)} )
#   done
#   _wanted values expl 'words from current tmux pane' compadd -a w
# }
#
# zle -C tmux-pane-words-prefix   complete-word _generic
# zle -C tmux-pane-words-anywhere complete-word _generic
# bindkey '^X^Tt' tmux-pane-words-prefix
# bindkey '^X^TT' tmux-pane-words-anywhere
# zstyle ':completion:tmux-pane-words-(prefix|anywhere):*' completer _tmux_pane_words
# zstyle ':completion:tmux-pane-words-(prefix|anywhere):*' ignore-line current
# Display the (interactive) menu on first execution of the hotkey.
# zstyle ':completion:tmux-pane-words-(prefix|anywhere):*' menu yes select interactive
# zstyle ':completion:tmux-pane-words-anywhere:*' matcher-list 'b:=* m:{A-Za-z}={a-zA-Z}'
# zstyle ':completion:tmux-pane-words-(prefix|anywhere):*' matcher-list 'b:=* m:{A-Za-z}={a-zA-Z}'
# }}}

### THEME ###
# NOTE: you can use vars with $<var> and ${<var>} as long as the str is double quoted: ""
# WARNING: hex colors can't contain capital letters

# --> Catppuccin (Mocha)
thm_bg="#11111b"
thm_fg="#cdd6f4"
thm_cyan="#89dceb"
thm_black="#181825"
thm_gray="#45475a"
thm_magenta="#cba6f7"
thm_pink="#f5c2e7"
thm_red="#f38ba8"
thm_green="#a6e3a1"
thm_yellow="#f9e2af"
thm_blue="#89b4fa"
thm_orange="#fab387"
thm_black4="#585b70"

# ----------------------------=== Theme ===--------------------------

# status
set -g status-position top
set -g status "on"
set -g status-bg "${thm_bg}"
set -g status-justify "left"
set -g status-left-length "100"
set -g status-right-length "100"

# messages
set -g message-style fg="${thm_cyan}",bg="${thm_gray}",align="centre"
set -g message-command-style fg="${thm_cyan}",bg="${thm_gray}",align="centre"

# panes
set -g pane-border-style fg="${thm_gray}"
set -g pane-active-border-style fg="${thm_blue}"

# windows
setw -g window-status-activity-style fg="${thm_fg}",bg="${thm_bg}",none
setw -g window-status-separator ""
setw -g window-status-style fg="${thm_fg}",bg="${thm_bg}",none

# --------=== Statusline

set -g status-left ""
set -g status-right "#[fg=$thm_pink,bg=$thm_bg,nobold,nounderscore,noitalics]#[fg=$thm_bg,bg=$thm_pink,nobold,nounderscore,noitalics] #[fg=$thm_fg,bg=$thm_gray] #W #{?client_prefix,#[fg=$thm_red],#[fg=$thm_green]}#[bg=$thm_gray]#{?client_prefix,#[bg=$thm_red],#[bg=$thm_green]}#[fg=$thm_bg] #[fg=$thm_fg,bg=$thm_gray] #S "

# current_dir
setw -g window-status-format "#[fg=$thm_bg,bg=$thm_blue] #I #[fg=$thm_fg,bg=$thm_gray] #{b:pane_current_path} "
setw -g window-status-current-format "#[fg=$thm_bg,bg=$thm_orange] #I #[fg=$thm_fg,bg=$thm_bg] #{b:pane_current_path} "

# parent_dir/current_dir
# setw -g window-status-format "#[fg=colour232,bg=colour111] #I #[fg=colour222,bg=colour235] #(echo '#{pane_current_path}' | rev | cut -d'/' -f-2 | rev) "
# setw -g window-status-current-format "#[fg=colour232,bg=colour208] #I #[fg=colour255,bg=colour237] #(echo '#{pane_current_path}' | rev | cut -d'/' -f-2 | rev) "

# --------=== Modes
setw -g clock-mode-colour "${thm_blue}"
setw -g mode-style "fg=${thm_pink} bg=${thm_black4} bold"

### Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'

